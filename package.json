{
  "name": "cmake-formatter",
  "displayName": "cmake-formatter",
  "description": "Visual Studio Code extension that formats CMake files using cmake-format, installed via Python's pip. Developed with help from Microsoft Copilot.",
  "version": "0.0.2",
  "publisher": "intellect-ind-in",
  "author": "Sameer Mahant",
  "icon": "assets/cmake-formatter-logo.png",
  "homepage": "https://github.com/sameermahant/vsce-cmake-format",
  "repository": {
    "type": "git",
    "url": "https://github.com/sameermahant/vsce-cmake-format"
  },
  "bugs": {
    "url": "https://github.com/sameermahant/vsce-cmake-format/issues"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.103.0"
  },
  "categories": [
    "Formatters",
    "Programming Languages"
  ],
  "keywords": [
    "cmake-format",
    "cmake-tools",
    "cmake",
    "code style",
    "format",
    "formatter"
  ],
  "changelog": "CHANGELOG.md",
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cmake-formatter.applyCmakeFormat",
        "title": "cmake-formatter: Apply cmake-format"
      },
      {
        "command": "cmake-formatter.toggleFormatOnSave",
        "title": "cmake-formatter: Toggle cmake-formatter format-on-save"
      }
    ],
    "languages": [
      {
        "id": "cmake",
        "extensions": [
          ".cmake",
          ".txt"
        ],
        "aliases": [
          "CMake",
          "CMakeLists"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "cmake-formatter",
      "properties": {
        "cmake-formatter.executablePath": {
          "type": "string",
          "default": "",
          "description": "Absolute path to the cmake-format executable installed via pip."
        },
        "cmake-formatter.arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional command-line arguments to pass to cmake-format."
        },
        "cmake-formatter.neededVersion": {
          "type": "string",
          "default": "1.0.0",
          "description": "Required cmake-format version."
        },
        "cmake-formatter.formatOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Automatically apply cmake-format when saving CMake files."
        },
        "cmake-formatter.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "error",
            "warn",
            "info"
          ],
          "description": "Controls verbosity of extension logs."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.103.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "eslint": "^9.32.0",
    "esbuild": "^0.25.8",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.9.2",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}
